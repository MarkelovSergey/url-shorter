// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: testify

package urlshorterservice

import (
	mock "github.com/stretchr/testify/mock"
)

// NewMockURLShorterService creates a new instance of MockURLShorterService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockURLShorterService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockURLShorterService {
	mock := &MockURLShorterService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// MockURLShorterService is an autogenerated mock type for the URLShorterService type
type MockURLShorterService struct {
	mock.Mock
}

type MockURLShorterService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockURLShorterService) EXPECT() *MockURLShorterService_Expecter {
	return &MockURLShorterService_Expecter{mock: &_m.Mock}
}

// Generate provides a mock function for the type MockURLShorterService
func (_mock *MockURLShorterService) Generate(url string) (string, error) {
	ret := _mock.Called(url)

	if len(ret) == 0 {
		panic("no return value specified for Generate")
	}

	var r0 string
	var r1 error
	if returnFunc, ok := ret.Get(0).(func(string) (string, error)); ok {
		return returnFunc(url)
	}
	if returnFunc, ok := ret.Get(0).(func(string) string); ok {
		r0 = returnFunc(url)
	} else {
		r0 = ret.Get(0).(string)
	}
	if returnFunc, ok := ret.Get(1).(func(string) error); ok {
		r1 = returnFunc(url)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}

// MockURLShorterService_Generate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Generate'
type MockURLShorterService_Generate_Call struct {
	*mock.Call
}

// Generate is a helper method to define mock.On call
//   - url string
func (_e *MockURLShorterService_Expecter) Generate(url interface{}) *MockURLShorterService_Generate_Call {
	return &MockURLShorterService_Generate_Call{Call: _e.mock.On("Generate", url)}
}

func (_c *MockURLShorterService_Generate_Call) Run(run func(url string)) *MockURLShorterService_Generate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockURLShorterService_Generate_Call) Return(s string, err error) *MockURLShorterService_Generate_Call {
	_c.Call.Return(s, err)
	return _c
}

func (_c *MockURLShorterService_Generate_Call) RunAndReturn(run func(url string) (string, error)) *MockURLShorterService_Generate_Call {
	_c.Call.Return(run)
	return _c
}

// GetOriginalURL provides a mock function for the type MockURLShorterService
func (_mock *MockURLShorterService) GetOriginalURL(id string) (string, error) {
	ret := _mock.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetOriginalURL")
	}

	var r0 string
	var r1 error
	if returnFunc, ok := ret.Get(0).(func(string) (string, error)); ok {
		return returnFunc(id)
	}
	if returnFunc, ok := ret.Get(0).(func(string) string); ok {
		r0 = returnFunc(id)
	} else {
		r0 = ret.Get(0).(string)
	}
	if returnFunc, ok := ret.Get(1).(func(string) error); ok {
		r1 = returnFunc(id)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}

// MockURLShorterService_GetOriginalURL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOriginalURL'
type MockURLShorterService_GetOriginalURL_Call struct {
	*mock.Call
}

// GetOriginalURL is a helper method to define mock.On call
//   - id string
func (_e *MockURLShorterService_Expecter) GetOriginalURL(id interface{}) *MockURLShorterService_GetOriginalURL_Call {
	return &MockURLShorterService_GetOriginalURL_Call{Call: _e.mock.On("GetOriginalURL", id)}
}

func (_c *MockURLShorterService_GetOriginalURL_Call) Run(run func(id string)) *MockURLShorterService_GetOriginalURL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		var arg0 string
		if args[0] != nil {
			arg0 = args[0].(string)
		}
		run(
			arg0,
		)
	})
	return _c
}

func (_c *MockURLShorterService_GetOriginalURL_Call) Return(s string, err error) *MockURLShorterService_GetOriginalURL_Call {
	_c.Call.Return(s, err)
	return _c
}

func (_c *MockURLShorterService_GetOriginalURL_Call) RunAndReturn(run func(id string) (string, error)) *MockURLShorterService_GetOriginalURL_Call {
	_c.Call.Return(run)
	return _c
}
